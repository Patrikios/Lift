% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_lift.R
\name{calculate_lift}
\alias{calculate_lift}
\title{calculate_lift}
\usage{
calculate_lift(
  dataWithProbabilityPrediction = pred,
  levelPositive = "yes",
  responseVariable = "y",
  probabilityOfChurning = "pred"
)
}
\arguments{
\item{dataWithProbabilityPrediction}{A data set object with predictions (probabilities)}

\item{levelPositive}{Character, positive categorical true value of the binary outcome variable (e.g., 'Y', 'yes' or 'churned')}

\item{responseVariable}{Character column indicating the response variable  (e.g., 'churn')}

\item{probabilityOfChurning}{Character column indicating the column, where the prediction probabilities are saves  (e.g., 'predictions')}
}
\value{
A data frame with the Lift values as compared to the base line performance
}
\description{
Provides an overview of the binary classification (Yes, No style) model performance and plots the lift plot
}
\examples{
library(data.table)
library(caret)
library(ranger)
data <- fread("https://raw.githubusercontent.com/just4jin/bank-marketing-prediction/master/data/bank_full.csv")
inx <- createDataPartition(data$y, list = FALSE, p = 0.7)
train <- data[inx, ]
test <- data[-inx, ]
set.seed(23)
model_ranger <- ranger(as.factor(y) ~ ., data = train, probability = TRUE)
pred <- data.table(
  event = test$y,
  pred = predictions(predict(model_ranger, test))[, "yes"]
)

calculate_lift(
  dataWithProbabilityPrediction = pred,
  levelPositive = "yes",
  responseVariable = "event",
  probabilityOfChurning = "pred"
)
}
